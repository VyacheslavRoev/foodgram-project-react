name: Django-app workflow

on: [push]

jobs:
  # tests:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Set up Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: 3.7
  #     - name: Install dependencies
  #       run: | 
  #         python -m pip install --upgrade pip 
  #         pip install flake8 pep8-naming flake8-broken-line flake8-return
  #         pip install -r backend/requirements.txt 
  #     - name: Test with flake8 and django tests
  #       run: |
  #         python -m flake8
  build_backend:
    name: Push backend to Docker Hub
    runs-on: ubuntu-latest
    # needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 
      - name: Login to Docker 
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2 
        with:
          context: ./backend/
          push: true
          tags: vyacheslavroev/foodgram_backend:latest
  build_frontend:
    name: Push frontend to Docker Hub
    runs-on: ubuntu-latest
    # needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 
      - name: Login to Docker 
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2 
        with:
          context: ./frontend/
          push: true
          tags: vyacheslavroev/foodgram_frontend:latest
  deploy:
    runs-on: ubuntu-latest
    needs:
      - build_backend
      - build_frontend
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            sudo docker pull vyacheslavroev/foodgram_backend
            sudo docker pull vyacheslavroev/foodgram_frontend 
            sudo docker-compose stop
            sudo docker-compose rm web
            touch .env
            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
            echo DEBUG=${{ secrets.DEBUG }} >> .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            sudo docker-compose up -d
            sudo docker-compose exec web python manage.py makemigrations users
            sudo docker-compose exec web python manage.py makemigrations recipes
            sudo docker-compose exec -T web python manage.py migrate --noinput
            sudo docker-compose exec -T web python manage.py collectstatic --no-input
            sudo docker-compose exec -T web python manage.py loaddata data/ingredients1.json
            sudo docker-compose exec -T web python manage.py loaddata data/tags.json